/*
 * generated by Xtext 2.31.0
 */
package simplepdl.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SimplePDLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.Model");
		private final Assignment cProcessesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cProcessesProcessParserRuleCall_0 = (RuleCall)cProcessesAssignment.eContents().get(0);
		
		//Model:
		//    processes+=Process*;
		@Override public ParserRule getRule() { return rule; }
		
		//processes+=Process*
		public Assignment getProcessesAssignment() { return cProcessesAssignment; }
		
		//Process
		public RuleCall getProcessesProcessParserRuleCall_0() { return cProcessesProcessParserRuleCall_0; }
	}
	public class ProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.Process");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProcessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Assignment cWorkdefinitionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWorkdefinitionsWorkDefinitionParserRuleCall_4_0 = (RuleCall)cWorkdefinitionsAssignment_4.eContents().get(0);
		private final Assignment cWorksequencesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWorksequencesWorkSequenceParserRuleCall_5_0 = (RuleCall)cWorksequencesAssignment_5.eContents().get(0);
		private final Assignment cResourcesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cResourcesResourceParserRuleCall_6_0 = (RuleCall)cResourcesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Process:
		//    'process' name=ID '{'
		//        ('description' description=STRING)?
		//        (workdefinitions+=WorkDefinition)*
		//        (worksequences+=WorkSequence)*
		//        (resources+=Resource)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'process' name=ID '{'
		//    ('description' description=STRING)?
		//    (workdefinitions+=WorkDefinition)*
		//    (worksequences+=WorkSequence)*
		//    (resources+=Resource)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'process'
		public Keyword getProcessKeyword_0() { return cProcessKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('description' description=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }
		
		//(workdefinitions+=WorkDefinition)*
		public Assignment getWorkdefinitionsAssignment_4() { return cWorkdefinitionsAssignment_4; }
		
		//WorkDefinition
		public RuleCall getWorkdefinitionsWorkDefinitionParserRuleCall_4_0() { return cWorkdefinitionsWorkDefinitionParserRuleCall_4_0; }
		
		//(worksequences+=WorkSequence)*
		public Assignment getWorksequencesAssignment_5() { return cWorksequencesAssignment_5; }
		
		//WorkSequence
		public RuleCall getWorksequencesWorkSequenceParserRuleCall_5_0() { return cWorksequencesWorkSequenceParserRuleCall_5_0; }
		
		//(resources+=Resource)*
		public Assignment getResourcesAssignment_6() { return cResourcesAssignment_6; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_6_0() { return cResourcesResourceParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class WorkDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.WorkDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkdefinitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cAssignedToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAssignedToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cAssignedToHumanCrossReference_5_0 = (CrossReference)cAssignedToAssignment_5.eContents().get(0);
		private final RuleCall cAssignedToHumanIDTerminalRuleCall_5_0_1 = (RuleCall)cAssignedToHumanCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAssignedToAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cAssignedToHumanCrossReference_6_1_0 = (CrossReference)cAssignedToAssignment_6_1.eContents().get(0);
		private final RuleCall cAssignedToHumanIDTerminalRuleCall_6_1_0_1 = (RuleCall)cAssignedToHumanCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cRequiredMaterialKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cRequiredMaterialsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cRequiredMaterialsRequiredMaterialParserRuleCall_7_1_0 = (RuleCall)cRequiredMaterialsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLinksToPredecessorKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPredecessorAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cPredecessorWorkDefinitionCrossReference_8_1_0 = (CrossReference)cPredecessorAssignment_8_1.eContents().get(0);
		private final RuleCall cPredecessorWorkDefinitionIDTerminalRuleCall_8_1_0_1 = (RuleCall)cPredecessorWorkDefinitionCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cPredecessorAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final CrossReference cPredecessorWorkDefinitionCrossReference_8_2_1_0 = (CrossReference)cPredecessorAssignment_8_2_1.eContents().get(0);
		private final RuleCall cPredecessorWorkDefinitionIDTerminalRuleCall_8_2_1_0_1 = (RuleCall)cPredecessorWorkDefinitionCrossReference_8_2_1_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Keyword cTypeKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cEqualsSignKeyword_8_5 = (Keyword)cGroup_8.eContents().get(5);
		private final Assignment cPredTypeAssignment_8_6 = (Assignment)cGroup_8.eContents().get(6);
		private final RuleCall cPredTypeWorkSequenceTypeEnumRuleCall_8_6_0 = (RuleCall)cPredTypeAssignment_8_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8_7 = (Keyword)cGroup_8.eContents().get(7);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cLinksToSuccessorKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cSuccessorAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cSuccessorWorkDefinitionCrossReference_9_1_0 = (CrossReference)cSuccessorAssignment_9_1.eContents().get(0);
		private final RuleCall cSuccessorWorkDefinitionIDTerminalRuleCall_9_1_0_1 = (RuleCall)cSuccessorWorkDefinitionCrossReference_9_1_0.eContents().get(1);
		private final Group cGroup_9_2 = (Group)cGroup_9.eContents().get(2);
		private final Keyword cCommaKeyword_9_2_0 = (Keyword)cGroup_9_2.eContents().get(0);
		private final Assignment cSuccessorAssignment_9_2_1 = (Assignment)cGroup_9_2.eContents().get(1);
		private final CrossReference cSuccessorWorkDefinitionCrossReference_9_2_1_0 = (CrossReference)cSuccessorAssignment_9_2_1.eContents().get(0);
		private final RuleCall cSuccessorWorkDefinitionIDTerminalRuleCall_9_2_1_0_1 = (RuleCall)cSuccessorWorkDefinitionCrossReference_9_2_1_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cTypeKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cEqualsSignKeyword_9_5 = (Keyword)cGroup_9.eContents().get(5);
		private final Assignment cSuccTypeAssignment_9_6 = (Assignment)cGroup_9.eContents().get(6);
		private final RuleCall cSuccTypeWorkSequenceTypeEnumRuleCall_9_6_0 = (RuleCall)cSuccTypeAssignment_9_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9_7 = (Keyword)cGroup_9.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//WorkDefinition:
		//    'workdefinition' name=ID '{'
		//        ('description' description=STRING)?
		//        'assignedTo' assignedTo+=[Human|ID] (',' assignedTo+=[Human|ID])*
		//        ('requiredMaterial' requiredMaterials+=RequiredMaterial)*
		//        ('linksToPredecessor' predecessor+=[WorkDefinition|ID] (',' predecessor+=[WorkDefinition|ID])*
		//         '[' 'type' '=' predType=WorkSequenceType ']' )?
		//        ('linksToSuccessor' successor+=[WorkDefinition|ID] (',' successor+=[WorkDefinition|ID])*
		//         '[' 'type' '=' succType=WorkSequenceType ']' )?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'workdefinition' name=ID '{'
		//    ('description' description=STRING)?
		//    'assignedTo' assignedTo+=[Human|ID] (',' assignedTo+=[Human|ID])*
		//    ('requiredMaterial' requiredMaterials+=RequiredMaterial)*
		//    ('linksToPredecessor' predecessor+=[WorkDefinition|ID] (',' predecessor+=[WorkDefinition|ID])*
		//     '[' 'type' '=' predType=WorkSequenceType ']' )?
		//    ('linksToSuccessor' successor+=[WorkDefinition|ID] (',' successor+=[WorkDefinition|ID])*
		//     '[' 'type' '=' succType=WorkSequenceType ']' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'workdefinition'
		public Keyword getWorkdefinitionKeyword_0() { return cWorkdefinitionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('description' description=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }
		
		//'assignedTo'
		public Keyword getAssignedToKeyword_4() { return cAssignedToKeyword_4; }
		
		//assignedTo+=[Human|ID]
		public Assignment getAssignedToAssignment_5() { return cAssignedToAssignment_5; }
		
		//[Human|ID]
		public CrossReference getAssignedToHumanCrossReference_5_0() { return cAssignedToHumanCrossReference_5_0; }
		
		//ID
		public RuleCall getAssignedToHumanIDTerminalRuleCall_5_0_1() { return cAssignedToHumanIDTerminalRuleCall_5_0_1; }
		
		//(',' assignedTo+=[Human|ID])*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//assignedTo+=[Human|ID]
		public Assignment getAssignedToAssignment_6_1() { return cAssignedToAssignment_6_1; }
		
		//[Human|ID]
		public CrossReference getAssignedToHumanCrossReference_6_1_0() { return cAssignedToHumanCrossReference_6_1_0; }
		
		//ID
		public RuleCall getAssignedToHumanIDTerminalRuleCall_6_1_0_1() { return cAssignedToHumanIDTerminalRuleCall_6_1_0_1; }
		
		//('requiredMaterial' requiredMaterials+=RequiredMaterial)*
		public Group getGroup_7() { return cGroup_7; }
		
		//'requiredMaterial'
		public Keyword getRequiredMaterialKeyword_7_0() { return cRequiredMaterialKeyword_7_0; }
		
		//requiredMaterials+=RequiredMaterial
		public Assignment getRequiredMaterialsAssignment_7_1() { return cRequiredMaterialsAssignment_7_1; }
		
		//RequiredMaterial
		public RuleCall getRequiredMaterialsRequiredMaterialParserRuleCall_7_1_0() { return cRequiredMaterialsRequiredMaterialParserRuleCall_7_1_0; }
		
		//('linksToPredecessor' predecessor+=[WorkDefinition|ID] (',' predecessor+=[WorkDefinition|ID])*
		// '[' 'type' '=' predType=WorkSequenceType ']' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'linksToPredecessor'
		public Keyword getLinksToPredecessorKeyword_8_0() { return cLinksToPredecessorKeyword_8_0; }
		
		//predecessor+=[WorkDefinition|ID]
		public Assignment getPredecessorAssignment_8_1() { return cPredecessorAssignment_8_1; }
		
		//[WorkDefinition|ID]
		public CrossReference getPredecessorWorkDefinitionCrossReference_8_1_0() { return cPredecessorWorkDefinitionCrossReference_8_1_0; }
		
		//ID
		public RuleCall getPredecessorWorkDefinitionIDTerminalRuleCall_8_1_0_1() { return cPredecessorWorkDefinitionIDTerminalRuleCall_8_1_0_1; }
		
		//(',' predecessor+=[WorkDefinition|ID])*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//','
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//predecessor+=[WorkDefinition|ID]
		public Assignment getPredecessorAssignment_8_2_1() { return cPredecessorAssignment_8_2_1; }
		
		//[WorkDefinition|ID]
		public CrossReference getPredecessorWorkDefinitionCrossReference_8_2_1_0() { return cPredecessorWorkDefinitionCrossReference_8_2_1_0; }
		
		//ID
		public RuleCall getPredecessorWorkDefinitionIDTerminalRuleCall_8_2_1_0_1() { return cPredecessorWorkDefinitionIDTerminalRuleCall_8_2_1_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_8_3() { return cLeftSquareBracketKeyword_8_3; }
		
		//'type'
		public Keyword getTypeKeyword_8_4() { return cTypeKeyword_8_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_5() { return cEqualsSignKeyword_8_5; }
		
		//predType=WorkSequenceType
		public Assignment getPredTypeAssignment_8_6() { return cPredTypeAssignment_8_6; }
		
		//WorkSequenceType
		public RuleCall getPredTypeWorkSequenceTypeEnumRuleCall_8_6_0() { return cPredTypeWorkSequenceTypeEnumRuleCall_8_6_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8_7() { return cRightSquareBracketKeyword_8_7; }
		
		//('linksToSuccessor' successor+=[WorkDefinition|ID] (',' successor+=[WorkDefinition|ID])*
		// '[' 'type' '=' succType=WorkSequenceType ']' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'linksToSuccessor'
		public Keyword getLinksToSuccessorKeyword_9_0() { return cLinksToSuccessorKeyword_9_0; }
		
		//successor+=[WorkDefinition|ID]
		public Assignment getSuccessorAssignment_9_1() { return cSuccessorAssignment_9_1; }
		
		//[WorkDefinition|ID]
		public CrossReference getSuccessorWorkDefinitionCrossReference_9_1_0() { return cSuccessorWorkDefinitionCrossReference_9_1_0; }
		
		//ID
		public RuleCall getSuccessorWorkDefinitionIDTerminalRuleCall_9_1_0_1() { return cSuccessorWorkDefinitionIDTerminalRuleCall_9_1_0_1; }
		
		//(',' successor+=[WorkDefinition|ID])*
		public Group getGroup_9_2() { return cGroup_9_2; }
		
		//','
		public Keyword getCommaKeyword_9_2_0() { return cCommaKeyword_9_2_0; }
		
		//successor+=[WorkDefinition|ID]
		public Assignment getSuccessorAssignment_9_2_1() { return cSuccessorAssignment_9_2_1; }
		
		//[WorkDefinition|ID]
		public CrossReference getSuccessorWorkDefinitionCrossReference_9_2_1_0() { return cSuccessorWorkDefinitionCrossReference_9_2_1_0; }
		
		//ID
		public RuleCall getSuccessorWorkDefinitionIDTerminalRuleCall_9_2_1_0_1() { return cSuccessorWorkDefinitionIDTerminalRuleCall_9_2_1_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9_3() { return cLeftSquareBracketKeyword_9_3; }
		
		//'type'
		public Keyword getTypeKeyword_9_4() { return cTypeKeyword_9_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_5() { return cEqualsSignKeyword_9_5; }
		
		//succType=WorkSequenceType
		public Assignment getSuccTypeAssignment_9_6() { return cSuccTypeAssignment_9_6; }
		
		//WorkSequenceType
		public RuleCall getSuccTypeWorkSequenceTypeEnumRuleCall_9_6_0() { return cSuccTypeWorkSequenceTypeEnumRuleCall_9_6_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9_7() { return cRightSquareBracketKeyword_9_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class WorkSequenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.WorkSequence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorksequenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPredecessorKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPredecessorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPredecessorWorkDefinitionCrossReference_4_0 = (CrossReference)cPredecessorAssignment_4.eContents().get(0);
		private final RuleCall cPredecessorWorkDefinitionIDTerminalRuleCall_4_0_1 = (RuleCall)cPredecessorWorkDefinitionCrossReference_4_0.eContents().get(1);
		private final Keyword cSuccessorKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSuccessorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSuccessorWorkDefinitionCrossReference_6_0 = (CrossReference)cSuccessorAssignment_6.eContents().get(0);
		private final RuleCall cSuccessorWorkDefinitionIDTerminalRuleCall_6_0_1 = (RuleCall)cSuccessorWorkDefinitionCrossReference_6_0.eContents().get(1);
		private final Keyword cTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTypeWorkSequenceTypeEnumRuleCall_8_0 = (RuleCall)cTypeAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//WorkSequence:
		//    'worksequence' name=ID '{'
		//        'predecessor' predecessor=[WorkDefinition|ID]
		//        'successor' successor=[WorkDefinition|ID]
		//        'type' type=WorkSequenceType
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'worksequence' name=ID '{'
		//    'predecessor' predecessor=[WorkDefinition|ID]
		//    'successor' successor=[WorkDefinition|ID]
		//    'type' type=WorkSequenceType
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'worksequence'
		public Keyword getWorksequenceKeyword_0() { return cWorksequenceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'predecessor'
		public Keyword getPredecessorKeyword_3() { return cPredecessorKeyword_3; }
		
		//predecessor=[WorkDefinition|ID]
		public Assignment getPredecessorAssignment_4() { return cPredecessorAssignment_4; }
		
		//[WorkDefinition|ID]
		public CrossReference getPredecessorWorkDefinitionCrossReference_4_0() { return cPredecessorWorkDefinitionCrossReference_4_0; }
		
		//ID
		public RuleCall getPredecessorWorkDefinitionIDTerminalRuleCall_4_0_1() { return cPredecessorWorkDefinitionIDTerminalRuleCall_4_0_1; }
		
		//'successor'
		public Keyword getSuccessorKeyword_5() { return cSuccessorKeyword_5; }
		
		//successor=[WorkDefinition|ID]
		public Assignment getSuccessorAssignment_6() { return cSuccessorAssignment_6; }
		
		//[WorkDefinition|ID]
		public CrossReference getSuccessorWorkDefinitionCrossReference_6_0() { return cSuccessorWorkDefinitionCrossReference_6_0; }
		
		//ID
		public RuleCall getSuccessorWorkDefinitionIDTerminalRuleCall_6_0_1() { return cSuccessorWorkDefinitionIDTerminalRuleCall_6_0_1; }
		
		//'type'
		public Keyword getTypeKeyword_7() { return cTypeKeyword_7; }
		
		//type=WorkSequenceType
		public Assignment getTypeAssignment_8() { return cTypeAssignment_8; }
		
		//WorkSequenceType
		public RuleCall getTypeWorkSequenceTypeEnumRuleCall_8_0() { return cTypeWorkSequenceTypeEnumRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class RequiredMaterialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.RequiredMaterial");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMaterialKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMaterialAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMaterialMaterialCrossReference_2_0 = (CrossReference)cMaterialAssignment_2.eContents().get(0);
		private final RuleCall cMaterialMaterialIDTerminalRuleCall_2_0_1 = (RuleCall)cMaterialMaterialCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cQuantityKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cQuantityAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cQuantityINTTerminalRuleCall_3_2_0 = (RuleCall)cQuantityAssignment_3_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RequiredMaterial:
		//    '[' 'material' material=[Material|ID]
		//      ('quantity' '=' quantity=INT)?
		//    ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'[' 'material' material=[Material|ID]
		//  ('quantity' '=' quantity=INT)?
		//']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//'material'
		public Keyword getMaterialKeyword_1() { return cMaterialKeyword_1; }
		
		//material=[Material|ID]
		public Assignment getMaterialAssignment_2() { return cMaterialAssignment_2; }
		
		//[Material|ID]
		public CrossReference getMaterialMaterialCrossReference_2_0() { return cMaterialMaterialCrossReference_2_0; }
		
		//ID
		public RuleCall getMaterialMaterialIDTerminalRuleCall_2_0_1() { return cMaterialMaterialIDTerminalRuleCall_2_0_1; }
		
		//('quantity' '=' quantity=INT)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'quantity'
		public Keyword getQuantityKeyword_3_0() { return cQuantityKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//quantity=INT
		public Assignment getQuantityAssignment_3_2() { return cQuantityAssignment_3_2; }
		
		//INT
		public RuleCall getQuantityINTTerminalRuleCall_3_2_0() { return cQuantityINTTerminalRuleCall_3_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.Resource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHumanParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMaterialParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Resource:
		//    Human | Material
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Human | Material
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Human
		public RuleCall getHumanParserRuleCall_0() { return cHumanParserRuleCall_0; }
		
		//Material
		public RuleCall getMaterialParserRuleCall_1() { return cMaterialParserRuleCall_1; }
	}
	public class HumanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.Human");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHumanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEmailKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEmailAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEmailSTRINGTerminalRuleCall_4_0 = (RuleCall)cEmailAssignment_4.eContents().get(0);
		private final Keyword cRoleKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRoleAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRoleSTRINGTerminalRuleCall_6_0 = (RuleCall)cRoleAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Human:
		//    'human' name=ID '{'
		//        'email' email=STRING
		//        'role' role=STRING
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'human' name=ID '{'
		//    'email' email=STRING
		//    'role' role=STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'human'
		public Keyword getHumanKeyword_0() { return cHumanKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'email'
		public Keyword getEmailKeyword_3() { return cEmailKeyword_3; }
		
		//email=STRING
		public Assignment getEmailAssignment_4() { return cEmailAssignment_4; }
		
		//STRING
		public RuleCall getEmailSTRINGTerminalRuleCall_4_0() { return cEmailSTRINGTerminalRuleCall_4_0; }
		
		//'role'
		public Keyword getRoleKeyword_5() { return cRoleKeyword_5; }
		
		//role=STRING
		public Assignment getRoleAssignment_6() { return cRoleAssignment_6; }
		
		//STRING
		public RuleCall getRoleSTRINGTerminalRuleCall_6_0() { return cRoleSTRINGTerminalRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MaterialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.Material");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaterialKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cUnitKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUnitAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUnitSTRINGTerminalRuleCall_4_0 = (RuleCall)cUnitAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Material:
		//    'material' name=ID '{'
		//        'unit' unit=STRING
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'material' name=ID '{'
		//    'unit' unit=STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'material'
		public Keyword getMaterialKeyword_0() { return cMaterialKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'unit'
		public Keyword getUnitKeyword_3() { return cUnitKeyword_3; }
		
		//unit=STRING
		public Assignment getUnitAssignment_4() { return cUnitAssignment_4; }
		
		//STRING
		public RuleCall getUnitSTRINGTerminalRuleCall_4_0() { return cUnitSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	public class WorkSequenceTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "simplepdl.xtext.SimplePDL.WorkSequenceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStartToStartEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStartToStartStartToStartKeyword_0_0 = (Keyword)cStartToStartEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFinishToStartEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFinishToStartFinishToStartKeyword_1_0 = (Keyword)cFinishToStartEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cStartToFinishEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cStartToFinishStartToFinishKeyword_2_0 = (Keyword)cStartToFinishEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFinishToFinishEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFinishToFinishFinishToFinishKeyword_3_0 = (Keyword)cFinishToFinishEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum WorkSequenceType:
		//    startToStart   = 'startToStart' |
		//    finishToStart  = 'finishToStart' |
		//    startToFinish  = 'startToFinish' |
		//    finishToFinish = 'finishToFinish'
		//;
		public EnumRule getRule() { return rule; }
		
		//startToStart   = 'startToStart' |
		//finishToStart  = 'finishToStart' |
		//startToFinish  = 'startToFinish' |
		//finishToFinish = 'finishToFinish'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//startToStart   = 'startToStart'
		public EnumLiteralDeclaration getStartToStartEnumLiteralDeclaration_0() { return cStartToStartEnumLiteralDeclaration_0; }
		
		//'startToStart'
		public Keyword getStartToStartStartToStartKeyword_0_0() { return cStartToStartStartToStartKeyword_0_0; }
		
		//finishToStart  = 'finishToStart'
		public EnumLiteralDeclaration getFinishToStartEnumLiteralDeclaration_1() { return cFinishToStartEnumLiteralDeclaration_1; }
		
		//'finishToStart'
		public Keyword getFinishToStartFinishToStartKeyword_1_0() { return cFinishToStartFinishToStartKeyword_1_0; }
		
		//startToFinish  = 'startToFinish'
		public EnumLiteralDeclaration getStartToFinishEnumLiteralDeclaration_2() { return cStartToFinishEnumLiteralDeclaration_2; }
		
		//'startToFinish'
		public Keyword getStartToFinishStartToFinishKeyword_2_0() { return cStartToFinishStartToFinishKeyword_2_0; }
		
		//finishToFinish = 'finishToFinish'
		public EnumLiteralDeclaration getFinishToFinishEnumLiteralDeclaration_3() { return cFinishToFinishEnumLiteralDeclaration_3; }
		
		//'finishToFinish'
		public Keyword getFinishToFinishFinishToFinishKeyword_3_0() { return cFinishToFinishFinishToFinishKeyword_3_0; }
	}
	
	private final ModelElements pModel;
	private final ProcessElements pProcess;
	private final WorkDefinitionElements pWorkDefinition;
	private final WorkSequenceElements pWorkSequence;
	private final RequiredMaterialElements pRequiredMaterial;
	private final ResourceElements pResource;
	private final HumanElements pHuman;
	private final MaterialElements pMaterial;
	private final WorkSequenceTypeElements eWorkSequenceType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SimplePDLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pProcess = new ProcessElements();
		this.pWorkDefinition = new WorkDefinitionElements();
		this.pWorkSequence = new WorkSequenceElements();
		this.pRequiredMaterial = new RequiredMaterialElements();
		this.pResource = new ResourceElements();
		this.pHuman = new HumanElements();
		this.pMaterial = new MaterialElements();
		this.eWorkSequenceType = new WorkSequenceTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("simplepdl.xtext.SimplePDL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    processes+=Process*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Process:
	//    'process' name=ID '{'
	//        ('description' description=STRING)?
	//        (workdefinitions+=WorkDefinition)*
	//        (worksequences+=WorkSequence)*
	//        (resources+=Resource)*
	//    '}'
	//;
	public ProcessElements getProcessAccess() {
		return pProcess;
	}
	
	public ParserRule getProcessRule() {
		return getProcessAccess().getRule();
	}
	
	//WorkDefinition:
	//    'workdefinition' name=ID '{'
	//        ('description' description=STRING)?
	//        'assignedTo' assignedTo+=[Human|ID] (',' assignedTo+=[Human|ID])*
	//        ('requiredMaterial' requiredMaterials+=RequiredMaterial)*
	//        ('linksToPredecessor' predecessor+=[WorkDefinition|ID] (',' predecessor+=[WorkDefinition|ID])*
	//         '[' 'type' '=' predType=WorkSequenceType ']' )?
	//        ('linksToSuccessor' successor+=[WorkDefinition|ID] (',' successor+=[WorkDefinition|ID])*
	//         '[' 'type' '=' succType=WorkSequenceType ']' )?
	//    '}'
	//;
	public WorkDefinitionElements getWorkDefinitionAccess() {
		return pWorkDefinition;
	}
	
	public ParserRule getWorkDefinitionRule() {
		return getWorkDefinitionAccess().getRule();
	}
	
	//WorkSequence:
	//    'worksequence' name=ID '{'
	//        'predecessor' predecessor=[WorkDefinition|ID]
	//        'successor' successor=[WorkDefinition|ID]
	//        'type' type=WorkSequenceType
	//    '}'
	//;
	public WorkSequenceElements getWorkSequenceAccess() {
		return pWorkSequence;
	}
	
	public ParserRule getWorkSequenceRule() {
		return getWorkSequenceAccess().getRule();
	}
	
	//RequiredMaterial:
	//    '[' 'material' material=[Material|ID]
	//      ('quantity' '=' quantity=INT)?
	//    ']'
	//;
	public RequiredMaterialElements getRequiredMaterialAccess() {
		return pRequiredMaterial;
	}
	
	public ParserRule getRequiredMaterialRule() {
		return getRequiredMaterialAccess().getRule();
	}
	
	//Resource:
	//    Human | Material
	//;
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}
	
	//Human:
	//    'human' name=ID '{'
	//        'email' email=STRING
	//        'role' role=STRING
	//    '}'
	//;
	public HumanElements getHumanAccess() {
		return pHuman;
	}
	
	public ParserRule getHumanRule() {
		return getHumanAccess().getRule();
	}
	
	//Material:
	//    'material' name=ID '{'
	//        'unit' unit=STRING
	//    '}'
	//;
	public MaterialElements getMaterialAccess() {
		return pMaterial;
	}
	
	public ParserRule getMaterialRule() {
		return getMaterialAccess().getRule();
	}
	
	//enum WorkSequenceType:
	//    startToStart   = 'startToStart' |
	//    finishToStart  = 'finishToStart' |
	//    startToFinish  = 'startToFinish' |
	//    finishToFinish = 'finishToFinish'
	//;
	public WorkSequenceTypeElements getWorkSequenceTypeAccess() {
		return eWorkSequenceType;
	}
	
	public EnumRule getWorkSequenceTypeRule() {
		return getWorkSequenceTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
