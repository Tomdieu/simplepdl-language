/**
 * generated by Xtext 2.31.0
 */
package simplepdl.xtext.simplePDL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import simplepdl.xtext.simplePDL.Resource;
import simplepdl.xtext.simplePDL.SimplePDLPackage;
import simplepdl.xtext.simplePDL.WorkDefinition;
import simplepdl.xtext.simplePDL.WorkSequence;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Process</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link simplepdl.xtext.simplePDL.impl.ProcessImpl#getName <em>Name</em>}</li>
 *   <li>{@link simplepdl.xtext.simplePDL.impl.ProcessImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link simplepdl.xtext.simplePDL.impl.ProcessImpl#getWorkdefinitions <em>Workdefinitions</em>}</li>
 *   <li>{@link simplepdl.xtext.simplePDL.impl.ProcessImpl#getWorksequences <em>Worksequences</em>}</li>
 *   <li>{@link simplepdl.xtext.simplePDL.impl.ProcessImpl#getResources <em>Resources</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProcessImpl extends MinimalEObjectImpl.Container implements simplepdl.xtext.simplePDL.Process
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getWorkdefinitions() <em>Workdefinitions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorkdefinitions()
   * @generated
   * @ordered
   */
  protected EList<WorkDefinition> workdefinitions;

  /**
   * The cached value of the '{@link #getWorksequences() <em>Worksequences</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorksequences()
   * @generated
   * @ordered
   */
  protected EList<WorkSequence> worksequences;

  /**
   * The cached value of the '{@link #getResources() <em>Resources</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResources()
   * @generated
   * @ordered
   */
  protected EList<Resource> resources;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProcessImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SimplePDLPackage.Literals.PROCESS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimplePDLPackage.PROCESS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimplePDLPackage.PROCESS__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<WorkDefinition> getWorkdefinitions()
  {
    if (workdefinitions == null)
    {
      workdefinitions = new EObjectContainmentEList<WorkDefinition>(WorkDefinition.class, this, SimplePDLPackage.PROCESS__WORKDEFINITIONS);
    }
    return workdefinitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<WorkSequence> getWorksequences()
  {
    if (worksequences == null)
    {
      worksequences = new EObjectContainmentEList<WorkSequence>(WorkSequence.class, this, SimplePDLPackage.PROCESS__WORKSEQUENCES);
    }
    return worksequences;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Resource> getResources()
  {
    if (resources == null)
    {
      resources = new EObjectContainmentEList<Resource>(Resource.class, this, SimplePDLPackage.PROCESS__RESOURCES);
    }
    return resources;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SimplePDLPackage.PROCESS__WORKDEFINITIONS:
        return ((InternalEList<?>)getWorkdefinitions()).basicRemove(otherEnd, msgs);
      case SimplePDLPackage.PROCESS__WORKSEQUENCES:
        return ((InternalEList<?>)getWorksequences()).basicRemove(otherEnd, msgs);
      case SimplePDLPackage.PROCESS__RESOURCES:
        return ((InternalEList<?>)getResources()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SimplePDLPackage.PROCESS__NAME:
        return getName();
      case SimplePDLPackage.PROCESS__DESCRIPTION:
        return getDescription();
      case SimplePDLPackage.PROCESS__WORKDEFINITIONS:
        return getWorkdefinitions();
      case SimplePDLPackage.PROCESS__WORKSEQUENCES:
        return getWorksequences();
      case SimplePDLPackage.PROCESS__RESOURCES:
        return getResources();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SimplePDLPackage.PROCESS__NAME:
        setName((String)newValue);
        return;
      case SimplePDLPackage.PROCESS__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case SimplePDLPackage.PROCESS__WORKDEFINITIONS:
        getWorkdefinitions().clear();
        getWorkdefinitions().addAll((Collection<? extends WorkDefinition>)newValue);
        return;
      case SimplePDLPackage.PROCESS__WORKSEQUENCES:
        getWorksequences().clear();
        getWorksequences().addAll((Collection<? extends WorkSequence>)newValue);
        return;
      case SimplePDLPackage.PROCESS__RESOURCES:
        getResources().clear();
        getResources().addAll((Collection<? extends Resource>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SimplePDLPackage.PROCESS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SimplePDLPackage.PROCESS__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case SimplePDLPackage.PROCESS__WORKDEFINITIONS:
        getWorkdefinitions().clear();
        return;
      case SimplePDLPackage.PROCESS__WORKSEQUENCES:
        getWorksequences().clear();
        return;
      case SimplePDLPackage.PROCESS__RESOURCES:
        getResources().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SimplePDLPackage.PROCESS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SimplePDLPackage.PROCESS__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case SimplePDLPackage.PROCESS__WORKDEFINITIONS:
        return workdefinitions != null && !workdefinitions.isEmpty();
      case SimplePDLPackage.PROCESS__WORKSEQUENCES:
        return worksequences != null && !worksequences.isEmpty();
      case SimplePDLPackage.PROCESS__RESOURCES:
        return resources != null && !resources.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //ProcessImpl
